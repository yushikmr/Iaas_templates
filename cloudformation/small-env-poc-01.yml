# ここに設定を書く
Parameters:
  PJPrefix:
    Type: String

  VPCCIDR:
    Type: String
    Default: "10.1.0.0/16"

  PublicSubnetACIDR:
    Type: String
    Default: "10.1.10.0/24"


Resources: 

    VPC: 
      Type: "AWS::EC2::VPC"
      Properties: 
        CidrBlock: !Ref VPCCIDR
        EnableDnsSupport: "true"
        EnableDnsHostnames: "true"
        InstanceTenancy: default
        Tags:
        - Key: Name
          Value: !Sub "${PJPrefix}-vpc"

    InternetGateway: 
      Type: "AWS::EC2::InternetGateway"

    InternetGatewayAttachment: 
      Type: "AWS::EC2::VPCGatewayAttachment"
      Properties: 
        InternetGatewayId: !Ref InternetGateway
        VpcId: !Ref VPC

    PublicSubnetA: 
      Type: "AWS::EC2::Subnet"
      Properties: 
        AvailabilityZone: "us-east-1a"
        CidrBlock: !Ref PublicSubnetACIDR
        VpcId: !Ref VPC 

    PublicRouteTableA: 
      Type: "AWS::EC2::RouteTable"
      Properties: 
        VpcId: !Ref VPC 

    PublicRouteA: 
      Type: "AWS::EC2::Route"
      Properties: 
        RouteTableId: !Ref PublicRouteTableA 
        DestinationCidrBlock: "0.0.0.0/0"
        GatewayId: !Ref InternetGateway 

    PublicSubnetARouteTableAssociation: 
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties: 
        SubnetId: !Ref PublicSubnetA 
        RouteTableId: !Ref PublicRouteTableA

    DemoKeyPair:
        Type: AWS::EC2::KeyPair
        Properties:
            KeyName: demo-key-pair

    EC2SG:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupName: "${PJPrefix}-sg"
        GroupDescription: Allow SSH access only MyIP
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: 0.0.0.0/0

    S3AccessRole:
      Type: "AWS::IAM::Role"
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement: 
            - 
              Effect: "Allow"
              Principal: 
                Service: 
                  - "ec2.amazonaws.com"
              Action: 
                - "sts:AssumeRole"
        Path: "/"
        Tags:
            - Key: Name
              Value: !Sub "iamrole-${PJPrefix}"
  
    S3AccessPolicies:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: s3access
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - "s3:ListAllMyBuckets"
              - "s3:GetBucketLocation"
            Resource: "arn:aws:s3:::*"
          - Effect: Allow
            Action: "*"
            Resource:
              - !Sub "arn:aws:s3:::s3-bucket-${PJPrefix}"
              - !Sub "arn:aws:s3:::s3-bucket-${PJPrefix}/*"
        Roles:
        - !Ref S3AccessRole

    S3AccessInstanceProfile:
      Type: AWS::IAM::InstanceProfile
      Properties:
        Path: "/"
        Roles:
        - !Ref S3AccessRole

    MyEC2Instance:
      Type: AWS::EC2::Instance
      Properties:
          ImageId: ami-06aa3f7caf3a30282
          InstanceType: t2.micro
          KeyName: !Ref DemoKeyPair
          SecurityGroups:
            - !Ref  EC2SG
          IamInstanceProfile:
            !Ref S3AccessInstanceProfile
          Tags:
            - Key: Name
              Value: !Sub "ec2-${PJPrefix}"
          UserData:
            Fn::Base64: |
              #!/bin/bash
              sudo apt update 
              sudo apt upgrade
              sudo apt  install awscli -y

    S3Bucket:
        Type: "AWS::S3::Bucket"
        Properties: 
            BucketName: !Sub "s3-bucket-${PJPrefix}"

Outputs: 
    KeyFingerprint:
      Value: !GetAtt DemoKeyPair.KeyFingerprint
    KeyPairID:
      Value: !GetAtt DemoKeyPair.KeyPairId
    KeyPair:
      Value: !Ref DemoKeyPair

        
  
